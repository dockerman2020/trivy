pipeline {
agent { label 'kubenode1' }
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  stages {
    stage('Build') {
      steps {
        sh 'docker build -t darinpope/java-web-app:latest .'
        }
     }
    stage('Trivy Scan') {
      steps {
        script{
             // Install trivy
             // sh 'echo downloading Trivy ....'
                sh 'curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /tmp v0.18.3'
             //  sh 'curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /tmp v0.21.1'
             // sh 'echo Trivy downloaded'
             sh 'curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl > /tmp/html.tpl'
             sh '/tmp/trivy darinpope/java-web-app:latest'
             // sh '/tmp/trivy devopshint/my-app-1.0'
             sh 'set -x /tmp/trivy  infoslack/dvwa'
             
             // Scan all vuln levels
                sh 'mkdir -p reports'
                // sh 'set -x /tmp/trivy filesystem --ignore-unfixed --vuln-type os,library --format template --template "@html.tpl" -o reports/nodejs-scan.html /usr/bin/nodejs'
                sh '/tmp/trivy filesystem --ignore-unfixed --vuln-type os,library --format template --template "/tmp/html.tpl" -o reports/nodejs-scan.html /usr/bin/nodejs'
                publishHTML target : [
                  allowMissing: true,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'reports',
                    reportFiles: 'nodjs-scan.html',
                    reportName: 'Trivy Scan',
                    reportTitles: 'Trivy Scan'
                ]
             }
          }
       }
   }
}
